@model Tuple<STech.Identity.ApplicationUser, STech.ViewModels.UpdateAccountVM>

<form action="#" method="post" class="user-update-form">
    <div class="user-form-box d-flex align-items-center">
        <div class="user-input-label text-end">
            <span>Họ tên</span>
        </div>
        <div class="d-flex flex-column flex-grow-1">
            @Html.TextBoxFor(model => model.Item2.UserFullName, new { @Value = Model.Item1.UserFullName, placeholder = "Họ tên" })
            @Html.ValidationMessageFor(model => model.Item2.UserFullName)
        </div>
    </div>
    <div class="user-form-box d-flex align-items-center">
        <div class="user-input-label text-end">
            <span>Giới tính</span>
        </div>
        <div class="d-flex flex-column flex-grow-1">
            <div class="input-radio d-flex align-items-center">
                <input type="radio" id="Gender1" name="Gender" value="Nam" @(Model.Item1.Gender.Equals("Nam") ? "checked" : "") />
                <label for="Gender1">Nam</label>
                <input type="radio" id="Gender2" name="Gender" value="Nữ"  @(Model.Item1.Gender.Equals("Nữ") ? "checked" : "") />
                <label for="Gender2">Nữ</label>
            </div>
            @Html.ValidationMessageFor(model => model.Item2.Gender)
        </div>
    </div>
    <div class="user-form-box d-flex align-items-center">
        <div class="user-input-label text-end">
            <span>Số điện thoại</span>
        </div>
        <div class="d-flex flex-column flex-grow-1">
            @Html.TextBoxFor(model => model.Item2.PhoneNumber, new { @Value = Model.Item1.PhoneNumber, placeholder = "Số điện thoại" })
            @Html.ValidationMessageFor(model => model.Item2.PhoneNumber)
        </div>
    </div>
    <div class="user-form-box d-flex align-items-center">
        <div class="user-input-label text-end">
            <span>Email</span>
        </div>
        <div class="d-flex flex-column flex-grow-1">
            @Html.TextBoxFor(model => model.Item2.Email, new { @Value = Model.Item1.Email, placeholder = "Email" })
            @Html.ValidationMessageFor(model => model.Item2.Email)
        </div>
    </div>
    <div class="user-form-box d-flex align-items-center">
        <div class="user-input-label text-end">
            <span>Ngày sinh</span>
        </div>
        <div class="d-flex flex-column flex-grow-1">
            @Html.TextBoxFor(model => model.Item2.DOB, new { @Value = Model.Item1.DOB.HasValue ? Model.Item1.DOB.Value.ToString("yyyy-MM-dd") : "", type = "date" })
            @Html.ValidationMessageFor(model => model.Item2.DOB)
        </div>
    </div>
    <div class="user-form-box d-flex align-items-center">
        <div class="user-input-label text-end">
            <span>Địa chỉ</span>
        </div>
        <div class="d-flex flex-column flex-grow-1">
            @Html.TextBoxFor(model => model.Item2.Address, new { @Value = Model.Item1.Address, placeholder = "Địa chỉ" })
            @Html.ValidationMessageFor(model => model.Item2.Address)
        </div>
    </div>
    <div class="user-form-box d-flex align-items-center mt-3">
        <button type="submit" class="user-form-submit">LƯU THAY ĐỔI</button>
    </div>
</form>